<!DOCTYPE html>
<html lang="en" class="scroll-p-16 snap-y snap-mandatory">
	<head>
		<%- include('./partials/head'); %>
	</head>
	<body class="font-sans text-stone-900 bg-gray-100 relative">
		<%- include('./partials/navbar'); %>

		<div
			id="sos-active"
			class="hidden fixed z-50 top-0 left-0 w-full h-full bg-red-500 flex flex-col items-center">
			<div class="m-auto text-center">
				<p class="text-white font-bold text-2xl mb-7">
					It's like you're in an emergency.
				</p>
				<p class="text-white mb-7">
					System detected a sos emergency at <span id="time"></span>
				</p>
				<p id="countDown" class="text-6xl text-white mb-7"></p>
				<p class="underline text-white mb-7 text-lg" id="cancel">
					i'm okay.
				</p>
			</div>
		</div>

		<div
			class="flex text-center justify-center items-center overflow-hidden relative w-full h-full-with-nav snap-start">
			<div id="important" class="z-20">
				<div class="fixed bottom-4 left-4">
					<div
						class="w-24 h-24 flex items-center justify-center bg-white rounded-full shadow-md z-10">
						<div
							class="w-16 h-16 bg-red-500 rounded-full flex items-center justify-center cursor-move select-none"
							id="sos">
							<p class="text-white font-bold">SOS</p>
						</div>
					</div>
				</div>
			</div>

			<div class="p-8 overflow-hidden flex flex-col h-full w-full">
				<h1 class="mx-4 my-4 text-3xl">Today</h1>
				<hr class="my-4 mb-8 border-0 border-b-2 border-stone-600" />
				<div
					class="px-4 flex flex-col gap-4 w-full md:w-1/2 overflow-y-auto flex-1">
					<% var today = new Date(); %> <% var formattedDate =
					today.getFullYear() + '-' + ('0' + (today.getMonth() +
					1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2); %>
					<% order.forEach((item) => { %> <% if (item.status ===
					"Done") { %> <% if (item.order_date === formattedDate) { %>
					<div
						class="grid grid-cols-2 bg-white drop-shadow-sm w-auto h-auto border-2 border-stone-600 p-2">
						<div class="text-left">
							<p>#<%= item.order_id %></p>
						</div>
						<div
							class="text-right flex gap-2 justify-end"
							id="name">
							<p>To.</p>
							<p class="font-light"><%= item.user_name %></p>
							<p class="font-light"><%= item.user_lastname %></p>
						</div>
						<div class="col-span-2">
							<div class="text-left">
								<p class="font-medium">Address</p>
							</div>
							<div>
								<hr
									class="border-0 border-b border-stone-600" />
							</div>
							<div class="p-4 pl-10">
								<div class="flex gap-2">
									<p>At</p>
									<p class="font-light">
										<%= item.address.at %>
									</p>
								</div>
								<div class="flex gap-2">
									<p>House number</p>
									<p class="font-light">
										<%= item.address.house_number %>
									</p>
								</div>
								<div class="flex gap-2">
									<p>City</p>
									<p class="font-light">
										<%= item.address.city %>
									</p>
								</div>
								<div class="flex gap-2">
									<p>Post code</p>
									<p class="font-light">
										<%= item.address.post_code %>
									</p>
								</div>
							</div>
						</div>
						<div class="col-span-2 grid grid-cols-2">
							<div class="gap-2 flex pl-5">
								<p>Payment method:</p>
								<p class="font-light"><%= item.payment %></p>
							</div>
							<div class="text-right">
								<button class="bg-primary h-8 w-24">
									<p class="text-sm">Pickup</p>
								</button>
							</div>
						</div>
					</div>
					<% } %> <% } %> <% }); %>
				</div>
			</div>
		</div>
		<script>
			//Get time
			const timeSpan = document.getElementById("time");
			const currentTime = new Date();
			const hours = currentTime.getHours();
			const minutes = currentTime.getMinutes();
			const ampm = hours >= 12 ? "PM" : "AM";
			const formattedTime = `${hours % 12}:${minutes
				.toString()
				.padStart(2, "0")} ${ampm}`;
			timeSpan.textContent = formattedTime;

			//SOS button
			const sosDiv = document.getElementById("sos");
			const importantDiv = document.getElementById("sos-active");
			let clickCount = 0;
			let timer = 7;
			let interval1;

			sosDiv.addEventListener("click", () => {
				clickCount++;
				console.log(`Click count: ${clickCount}`);

				if (clickCount === 1) {
					interval1 = setInterval(() => {
						timer--;
						console.log(`Timer: ${timer}`);

						if (timer === 0) {
							clearInterval(interval1);
							timer = 7;
							clickCount = 0;
							console.log(
								"Timer expired, resetting click count and timer."
							);
						}
					}, 1000);
				}

				if (clickCount === 3) {
					importantDiv.classList.remove("hidden");
					clickCount = 0;
					clearInterval(interval1);
					timer = 10;
					console.log(
						"Clicked 3 times within 7 seconds, stopping timer, showing importantDiv, and starting the 10-second countdown."
					);

					//SOS count down
					const countDownParagraph =
						document.getElementById("countDown");
					let remainingSeconds = 10;
					countDownParagraph.innerText = remainingSeconds;
					const countDownInterval = setInterval(() => {
						remainingSeconds--;
						console.log(`Timer 2: ${remainingSeconds}`);
						countDownParagraph.innerText = remainingSeconds;
						if (remainingSeconds === 0) {
							clearInterval(countDownInterval);
							remainingSeconds = 10;
							countDownParagraph.innerText = "";
							console.log("Timer 2 expired, calling 911.");
							//sos call
							countDownParagraph.innerText = "911";
							alert("911");
						} else {
							const cancelBtn = document.getElementById("cancel");
							cancelBtn.addEventListener("click", () => {
								importantDiv.classList.add("hidden");
								clearInterval(countDownInterval);
								remainingSeconds = 10;
								console.log(
									"Cancel button clicked, hiding importantDiv and resetting timer 2."
								);
							});
						}
					}, 1000);
				}
			});
		</script>
	</body>
</html>
